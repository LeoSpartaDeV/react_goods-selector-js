{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","Button","changeButon","children","set","type","className","onClick","ClearButton","reset","App","useState","selectedGood","setSelectedGood","map","good","ReactDOM","render","document","getElementById"],"mappings":"2NAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAEF,SAASC,EAAT,GAAiD,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,IACvC,OACE,wBACE,UAASF,EACTG,KAAK,SACLC,UAAU,iBACVC,QAASH,EAJX,SAMGD,IAKP,SAASK,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACrB,OACE,wBACE,UAAQ,cACRJ,KAAK,SACLC,UAAU,cACVC,QAASE,IAKR,IAAMC,EAAM,WACjB,MAAwCC,mBAASX,EAAM,IAAvD,mBAAOY,EAAP,KAAqBC,EAArB,KAGA,OACE,uBAAMP,UAAU,oBAAhB,UACoB,KAAjBM,EAEG,oBAAIN,UAAU,sCAAd,+BAKA,qBAAIA,UAAU,sCAAd,oBACMM,EADN,gBAGE,cAACJ,EAAD,CACEC,MAfO,kBAAMI,EAAgB,UAqBrC,uBAAOP,UAAU,QAAjB,SACE,gCACGN,EAAMc,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRT,UAAWM,IAAiBG,EACxB,+BACA,GALN,UAOE,6BACGH,IAAiBG,EAEd,cAACd,EAAD,CACEC,YAAY,YACZE,IAAK,kBAAMS,EAAgBE,IAF7B,eAQA,cAACd,EAAD,CACEC,YAAY,eACZE,IAAK,kBAAMS,EAAgBE,IAF7B,iBAUN,oBAAI,UAAQ,YAAYT,UAAU,eAAlC,SACGS,MA5BEA,cChEnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4191c14a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nfunction Button({ changeButon, children, set }) {\n  return (\n    <button\n      data-cy={changeButon}\n      type=\"button\"\n      className=\"button is-info\"\n      onClick={set}\n    >\n      {children}\n    </button>\n  );\n}\n\nfunction ClearButton({ reset }) {\n  return (\n    <button\n      data-cy=\"ClearButton\"\n      type=\"button\"\n      className=\"delete ml-3\"\n      onClick={reset}\n    />\n  );\n}\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState(goods[8]);\n  const clearTitle = () => setSelectedGood('');\n\n  return (\n    <main className=\"section container\">\n      {selectedGood === ''\n        ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            No goods selected\n          </h1>\n        )\n        : (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n\n            <ClearButton\n              reset={clearTitle}\n            />\n          </h1>\n        )\n      }\n\n      <table className=\"table\">\n        <tbody>\n          {goods.map(good => (\n            <tr\n              key={good}\n              data-cy=\"Good\"\n              className={selectedGood === good\n                ? 'has-background-success-light'\n                : ''}\n            >\n              <td>\n                {selectedGood === good\n                  ? (\n                    <Button\n                      changeButon=\"addButton\"\n                      set={() => setSelectedGood(good)}\n                    >\n                      -\n                    </Button>\n                  )\n                  : (\n                    <Button\n                      changeButon=\"RemoveButton\"\n                      set={() => setSelectedGood(good)}\n                    >\n                      +\n                    </Button>\n                  )\n                }\n              </td>\n\n              <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                {good}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}